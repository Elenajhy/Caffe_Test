# CMake generated Testfile for 
# Source directory: E:/GitCode/Caffe_Test/src/thirdparty/HDF5/hdf5-1.8.15-patch1/tools/perform
# Build directory: E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/tools/perform
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(PERFORM_h5perform-clear-objects "D:/ProgramFiles/CMake/bin/cmake.exe" "-E" "remove" "chunk.h5" "iopipe.h5" "iopipe.raw" "x-diag-rd.dat" "x-diag-wr.dat" "x-rowmaj-rd.dat" "x-rowmaj-wr.dat" "x-gnuplot")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(PERFORM_h5perform-clear-objects "D:/ProgramFiles/CMake/bin/cmake.exe" "-E" "remove" "chunk.h5" "iopipe.h5" "iopipe.raw" "x-diag-rd.dat" "x-diag-wr.dat" "x-rowmaj-rd.dat" "x-rowmaj-wr.dat" "x-gnuplot")
else()
  add_test(PERFORM_h5perform-clear-objects NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(PERFORM_h5perf_serial "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Debug/h5perf_serial.exe")
  set_tests_properties(PERFORM_h5perf_serial PROPERTIES  TIMEOUT "1800")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(PERFORM_h5perf_serial "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Release/h5perf_serial.exe")
  set_tests_properties(PERFORM_h5perf_serial PROPERTIES  TIMEOUT "1800")
else()
  add_test(PERFORM_h5perf_serial NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(PERFORM_chunk "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Debug/chunk.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(PERFORM_chunk "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Release/chunk.exe")
else()
  add_test(PERFORM_chunk NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(PERFORM_iopipe "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Debug/iopipe.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(PERFORM_iopipe "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Release/iopipe.exe")
else()
  add_test(PERFORM_iopipe NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(PERFORM_overhead "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Debug/overhead.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(PERFORM_overhead "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Release/overhead.exe")
else()
  add_test(PERFORM_overhead NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(PERFORM_perf_meta "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Debug/perf_meta.exe")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(PERFORM_perf_meta "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Release/perf_meta.exe")
else()
  add_test(PERFORM_perf_meta NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(PERFORM_zip_perf_help "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Debug/zip_perf.exe" "-h")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(PERFORM_zip_perf_help "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Release/zip_perf.exe" "-h")
else()
  add_test(PERFORM_zip_perf_help NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(PERFORM_zip_perf "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Debug/zip_perf.exe" "tfilters.h5")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(PERFORM_zip_perf "E:/GitCode/Caffe_Test/src/thirdparty/HDF5/vs2013/bin/Release/zip_perf.exe" "tfilters.h5")
else()
  add_test(PERFORM_zip_perf NOT_AVAILABLE)
endif()
