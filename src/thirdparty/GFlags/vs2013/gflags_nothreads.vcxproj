<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{973AAE93-08AF-4D9A-898B-3999E02C25F1}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>gflags_nothreads</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule E:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\ProgramFiles\CMake\bin\cmake.exe -HE:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master -BE:/GitCode/Caffe_Test/src/thirdparty/GFlags/vs2013 --check-stamp-file E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master/CMakeLists.txt;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\CMakeLists.txt;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\utils.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeSystem.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeSystemSpecificInitialize.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeCXXCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeSystemSpecificInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeGenericSystem.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\WindowsPaths.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCXXInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Compiler\MSVC-CXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC-CXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeRCCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeRCInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCommonLanguageInclude.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeCCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC-C.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCommonLanguageInclude.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckTypeSize.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFile.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFileCXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFileCXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckCXXSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindThreads.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFiles.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckLibraryExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindPackageHandleStandardArgs.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindPackageMessage.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeParseArguments.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_ns.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_declare.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_completions.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\config.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\config.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\version.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\config.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule E:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\ProgramFiles\CMake\bin\cmake.exe -HE:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master -BE:/GitCode/Caffe_Test/src/thirdparty/GFlags/vs2013 --check-stamp-file E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master/CMakeLists.txt;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\CMakeLists.txt;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\utils.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeSystem.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeSystemSpecificInitialize.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeCXXCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeSystemSpecificInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeGenericSystem.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\WindowsPaths.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCXXInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Compiler\MSVC-CXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC-CXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeRCCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeRCInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCommonLanguageInclude.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeCCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC-C.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCommonLanguageInclude.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckTypeSize.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFile.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFileCXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFileCXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckCXXSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindThreads.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFiles.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckLibraryExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindPackageHandleStandardArgs.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindPackageMessage.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeParseArguments.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_ns.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_declare.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_completions.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\config.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\config.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\version.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\config.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule E:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\ProgramFiles\CMake\bin\cmake.exe -HE:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master -BE:/GitCode/Caffe_Test/src/thirdparty/GFlags/vs2013 --check-stamp-file E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master/CMakeLists.txt;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\CMakeLists.txt;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\utils.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeSystem.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeSystemSpecificInitialize.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeCXXCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeSystemSpecificInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeGenericSystem.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\WindowsPaths.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCXXInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Compiler\MSVC-CXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC-CXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeRCCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeRCInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCommonLanguageInclude.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeCCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC-C.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCommonLanguageInclude.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckTypeSize.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFile.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFileCXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFileCXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckCXXSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindThreads.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFiles.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckLibraryExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindPackageHandleStandardArgs.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindPackageMessage.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeParseArguments.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_ns.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_declare.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_completions.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\config.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\config.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\version.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\config.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule E:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\ProgramFiles\CMake\bin\cmake.exe -HE:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master -BE:/GitCode/Caffe_Test/src/thirdparty/GFlags/vs2013 --check-stamp-file E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:/GitCode/Caffe_Test/src/thirdparty/GFlags/gflags-master/CMakeLists.txt;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\CMakeLists.txt;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\utils.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeSystem.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeSystemSpecificInitialize.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeCXXCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeSystemSpecificInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeGenericSystem.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\WindowsPaths.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCXXInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Compiler\MSVC-CXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC-CXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeRCCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeRCInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCommonLanguageInclude.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\3.3.0\CMakeCCompiler.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCInformation.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC-C.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\Platform\Windows-MSVC.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeCommonLanguageInclude.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckTypeSize.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFile.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFileCXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFileCXX.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckCXXSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindThreads.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckIncludeFiles.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckLibraryExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CheckSymbolExists.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindPackageHandleStandardArgs.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\FindPackageMessage.cmake;D:\ProgramFiles\CMake\share\cmake-3.3\Modules\CMakeParseArguments.cmake;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_ns.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_declare.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\gflags_completions.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\src\config.h.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\config.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\version.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\cmake\config.cmake.in;E:\GitCode\Caffe_Test\src\thirdparty\GFlags\gflags-master\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\GitCode\Caffe_Test\src\thirdparty\GFlags\vs2013\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="E:/GitCode/Caffe_Test/src/thirdparty/GFlags/vs2013/ZERO_CHECK.vcxproj">
      <Project>EF51AE22-3AC1-4CC9-BBF2-D6745160C1DE</Project>
    </ProjectReference>
    <ProjectReference Include="E:/GitCode/Caffe_Test/src/thirdparty/GFlags/vs2013/gflags_nothreads-static.vcxproj">
      <Project>7215004E-4C58-46E2-AA8D-D5169AC480DE</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>